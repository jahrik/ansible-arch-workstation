---
- name: Install x server
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - xorg-server
    - xorg-xinit
    - xorg-xrandr
  tags: [ 'i3' ]

- name: Install i3-gaps
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - i3-gaps
    - i3lock
    - i3status
  tags: [ 'i3' ]

- name: Install i3 extras
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - conky
    - dmenu
    - dunst
    - feh
    - redshift
    - rxvt-unicode
    - scrot
    - ttf-dejavu
    # - inconsolata-powerline
    - terminus-font
    - udiskie
    - xf86-input-synaptics
    - xorg-xmodmap
    - xorg-xrdb
    - urxvt-perls
  tags: [ 'i3' ]

- name: install packages from aur
  yay:
    name: "{{ item }}"
    user: "{{ ansible_user }}"
  with_items:
    - xcalib
  tags: [ 'i3' ]

- name: Install polybar if true
  yay:
    name: polybar
    user: "{{ ansible_user }}"
  when: i3.polybar
  tags: [ 'i3' ]

- name: Create ~/.i3 directories
  file:
    path: "/home/{{ ansible_user }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  with_items:
    - .i3
    - .i3/bin
    - .i3/systemd
  tags: [ 'i3' ]

- name: generate i3 config files
  template:
    src: "i3/{{ item }}.j2"
    dest: "/home/{{ ansible_user }}/.i3/{{ item }}"
  with_items:
    - Xresources.dark
    - Xresources.light
    - config
    - conkyrc
    - dark.xresources
    - dunstrc
    - gtk-3.0-settings
    - gtkrc-2.0
    - light.xresources
    - xinitrc
    - xmodmap
    - xresources
  tags: [ 'i3' ]

- name: generate i3 bin files
  template:
    src: "i3/{{ item }}.j2"
    dest: "/home/{{ ansible_user }}/.i3/{{ item }}"
    mode: 0777
  with_items:
    - bin/apply-colors-runtime
    - bin/conky-wrapper
  tags: [ 'i3' ]

- name: symlink xinitrc
  file:
    src: "/home/{{ ansible_user }}/.i3/xinitrc"
    dest: "/home/{{ ansible_user }}/.xinitrc"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: link
  tags: [ 'i3' ]

- name: create $HOME/.urxvt/ext/ dir
  file:
    path: "/home/{{ ansible_user }}/.urxvt/ext/"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  tags: [ 'i3' ]

- name: download urxvt font-size plugin
  get_url:
    url: https://raw.githubusercontent.com/majutsushi/urxvt-font-size/master/font-size
    dest: "/home/{{ ansible_user }}/.urxvt/ext/font-size"
    mode: 0755
  tags: [ 'i3' ]

- name: enable urxvt keyboard-select plugin
  file:
    src: /usr/lib/urxvt/perl/keyboard-select
    dest: "/home/{{ ansible_user }}/.urxvt/ext/keyboard-select"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: link
  tags: [ 'i3' ]

- name: enable urxvt url-select plugin
  file:
    src: /usr/lib/urxvt/perl/url-select
    dest: "/home/{{ ansible_user }}/.urxvt/ext/url-select"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    state: link
  tags: [ 'i3' ]

- name: create $HOME/screenshots dir for scrot
  file:
    path: "/home/{{ ansible_user }}/screenshots/"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  tags: [ 'i3' ]

- name: Set default background image for feh
  copy:
    src: background.jpg
    dest: /var/background.jpg

- name: create $HOME/.config/polybar dir
  file:
    path: "/home/{{ ansible_user }}/.config/polybar/"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
  tags: [ 'i3' ]

- name: Generate polybar config files
  template:
    src: "polybar/{{ item }}.j2"
    dest: "/home/{{ ansible_user }}/.config/polybar/{{ item }}"
  with_items:
    - launch.sh
    - config
  when: i3.polybar
  tags: [ 'i3' ]

- name: Make polybar launch.sh executable
  file:
    path: "/home/{{ ansible_user }}/.config/polybar/launch.sh"
    mode: 0755
  when: i3.polybar
  tags: [ 'i3' ]
